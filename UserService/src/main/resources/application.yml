spring:
  application:
    name: UserService
  config:
    import:
    - configserver:http://localhost:8085
    
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-13622868.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa900vlrk2qex4Jx5d7
            client-secret: 66LDnaAe8-EgboRyEUBr0HUZC4nqEPIbYWCpCPUK
            
        provider:
          okta:
            issuer-uri: https://dev-13622868.okta.com/oauth2/default
            
    
  #profiles:
    #active: dev
    
#eureka:
  #instance:
   # prefer-ip-address: true
  #client:
    #fetch-registry: true
  #  register-with-eureka: true
   # service-url:
    #  defaultZone: http://localhost:8761/eureka
    
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
      
resilience4j:
#  circuitbreaker:
#    instances:
#      ratingHotelBreaker:
#        register-health-indicator: true
#        event-consumer-buffer-size: 10
#        failure-rate-threshold: 50
#        minimum-number-of-calls: 5
#        automatic-transition-from-open-to-half-open-enabled: true
#        wait-duration-in-open-state: 5s
#        permitted-number-of-calls-in-half-open-state: 3
#        sliding-window-size: 10
#        sliding-window-type: count-based
  
#  retry:
#    instances:
#      ratingHotelService:
#        max-attempts: 3
#        wait-duration: 5s
 
  ratelimiter:
    instances:
      ratingHotelUserRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
        
# okta configure
okta:
  oauth2:
    issuer: https://dev-13622868.okta.com/oauth2/default
    audience: api://default
        